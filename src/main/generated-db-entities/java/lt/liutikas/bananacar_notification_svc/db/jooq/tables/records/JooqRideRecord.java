/*
 * This file is generated by jOOQ.
 */
package lt.liutikas.bananacar_notification_svc.db.jooq.tables.records;


import java.time.LocalDateTime;
import java.util.UUID;

import lt.liutikas.bananacar_notification_svc.db.jooq.tables.Ride;
import lt.liutikas.bananacar_notification_svc.db.jooq.tables.pojos.JooqRide;

import org.jooq.JSONB;
import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class JooqRideRecord extends UpdatableRecordImpl<JooqRideRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.ride.id</code>.
     */
    public JooqRideRecord setId(UUID value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.ride.id</code>.
     */
    public UUID getId() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>public.ride.bananacar_ride_id</code>.
     */
    public JooqRideRecord setBananacarRideId(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.ride.bananacar_ride_id</code>.
     */
    public String getBananacarRideId() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.ride.locations</code>.
     */
    public JooqRideRecord setLocations(JSONB value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.ride.locations</code>.
     */
    public JSONB getLocations() {
        return (JSONB) get(2);
    }

    /**
     * Setter for <code>public.ride.bananacar_url</code>.
     */
    public JooqRideRecord setBananacarUrl(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>public.ride.bananacar_url</code>.
     */
    public String getBananacarUrl() {
        return (String) get(3);
    }

    /**
     * Setter for <code>public.ride.departs_on</code>.
     */
    public JooqRideRecord setDepartsOn(LocalDateTime value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>public.ride.departs_on</code>.
     */
    public LocalDateTime getDepartsOn() {
        return (LocalDateTime) get(4);
    }

    /**
     * Setter for <code>public.ride.created_on</code>.
     */
    public JooqRideRecord setCreatedOn(LocalDateTime value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>public.ride.created_on</code>.
     */
    public LocalDateTime getCreatedOn() {
        return (LocalDateTime) get(5);
    }

    /**
     * Setter for <code>public.ride.updated_on</code>.
     */
    public JooqRideRecord setUpdatedOn(LocalDateTime value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>public.ride.updated_on</code>.
     */
    public LocalDateTime getUpdatedOn() {
        return (LocalDateTime) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<UUID> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached JooqRideRecord
     */
    public JooqRideRecord() {
        super(Ride.RIDE);
    }

    /**
     * Create a detached, initialised JooqRideRecord
     */
    public JooqRideRecord(UUID id, String bananacarRideId, JSONB locations, String bananacarUrl, LocalDateTime departsOn, LocalDateTime createdOn, LocalDateTime updatedOn) {
        super(Ride.RIDE);

        setId(id);
        setBananacarRideId(bananacarRideId);
        setLocations(locations);
        setBananacarUrl(bananacarUrl);
        setDepartsOn(departsOn);
        setCreatedOn(createdOn);
        setUpdatedOn(updatedOn);
    }

    /**
     * Create a detached, initialised JooqRideRecord
     */
    public JooqRideRecord(JooqRide value) {
        super(Ride.RIDE);

        if (value != null) {
            setId(value.getId());
            setBananacarRideId(value.getBananacarRideId());
            setLocations(value.getLocations());
            setBananacarUrl(value.getBananacarUrl());
            setDepartsOn(value.getDepartsOn());
            setCreatedOn(value.getCreatedOn());
            setUpdatedOn(value.getUpdatedOn());
        }
    }
}
