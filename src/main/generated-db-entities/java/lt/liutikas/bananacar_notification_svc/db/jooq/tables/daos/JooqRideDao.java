/*
 * This file is generated by jOOQ.
 */
package lt.liutikas.bananacar_notification_svc.db.jooq.tables.daos;


import java.time.LocalDateTime;
import java.util.List;
import java.util.Optional;
import java.util.UUID;

import lt.liutikas.bananacar_notification_svc.db.jooq.tables.Ride;
import lt.liutikas.bananacar_notification_svc.db.jooq.tables.pojos.JooqRide;
import lt.liutikas.bananacar_notification_svc.db.jooq.tables.records.JooqRideRecord;

import org.jooq.Configuration;
import org.jooq.JSONB;
import org.jooq.impl.DAOImpl;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Repository
public class JooqRideDao extends DAOImpl<JooqRideRecord, JooqRide, UUID> {

    /**
     * Create a new JooqRideDao without any configuration
     */
    public JooqRideDao() {
        super(Ride.RIDE, JooqRide.class);
    }

    /**
     * Create a new JooqRideDao with an attached configuration
     */
    @Autowired
    public JooqRideDao(Configuration configuration) {
        super(Ride.RIDE, JooqRide.class, configuration);
    }

    @Override
    public UUID getId(JooqRide object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<JooqRide> fetchRangeOfId(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(Ride.RIDE.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<JooqRide> fetchById(UUID... values) {
        return fetch(Ride.RIDE.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public JooqRide fetchOneById(UUID value) {
        return fetchOne(Ride.RIDE.ID, value);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public Optional<JooqRide> fetchOptionalById(UUID value) {
        return fetchOptional(Ride.RIDE.ID, value);
    }

    /**
     * Fetch records that have <code>bananacar_ride_id BETWEEN lowerInclusive
     * AND upperInclusive</code>
     */
    public List<JooqRide> fetchRangeOfBananacarRideId(String lowerInclusive, String upperInclusive) {
        return fetchRange(Ride.RIDE.BANANACAR_RIDE_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>bananacar_ride_id IN (values)</code>
     */
    public List<JooqRide> fetchByBananacarRideId(String... values) {
        return fetch(Ride.RIDE.BANANACAR_RIDE_ID, values);
    }

    /**
     * Fetch records that have <code>locations BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<JooqRide> fetchRangeOfLocations(JSONB lowerInclusive, JSONB upperInclusive) {
        return fetchRange(Ride.RIDE.LOCATIONS, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>locations IN (values)</code>
     */
    public List<JooqRide> fetchByLocations(JSONB... values) {
        return fetch(Ride.RIDE.LOCATIONS, values);
    }

    /**
     * Fetch records that have <code>bananacar_url BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<JooqRide> fetchRangeOfBananacarUrl(String lowerInclusive, String upperInclusive) {
        return fetchRange(Ride.RIDE.BANANACAR_URL, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>bananacar_url IN (values)</code>
     */
    public List<JooqRide> fetchByBananacarUrl(String... values) {
        return fetch(Ride.RIDE.BANANACAR_URL, values);
    }

    /**
     * Fetch records that have <code>departs_on BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<JooqRide> fetchRangeOfDepartsOn(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(Ride.RIDE.DEPARTS_ON, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>departs_on IN (values)</code>
     */
    public List<JooqRide> fetchByDepartsOn(LocalDateTime... values) {
        return fetch(Ride.RIDE.DEPARTS_ON, values);
    }

    /**
     * Fetch records that have <code>created_on BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<JooqRide> fetchRangeOfCreatedOn(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(Ride.RIDE.CREATED_ON, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>created_on IN (values)</code>
     */
    public List<JooqRide> fetchByCreatedOn(LocalDateTime... values) {
        return fetch(Ride.RIDE.CREATED_ON, values);
    }

    /**
     * Fetch records that have <code>updated_on BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<JooqRide> fetchRangeOfUpdatedOn(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(Ride.RIDE.UPDATED_ON, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>updated_on IN (values)</code>
     */
    public List<JooqRide> fetchByUpdatedOn(LocalDateTime... values) {
        return fetch(Ride.RIDE.UPDATED_ON, values);
    }
}
