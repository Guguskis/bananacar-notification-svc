/*
 * This file is generated by jOOQ.
 */
package lt.liutikas.bananacar_notification_svc.db.jooq.tables.records;


import java.time.LocalDateTime;

import lt.liutikas.bananacar_notification_svc.db.jooq.tables.RideSubscription;
import lt.liutikas.bananacar_notification_svc.db.jooq.tables.pojos.JooqRideSubscription;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class JooqRideSubscriptionRecord extends UpdatableRecordImpl<JooqRideSubscriptionRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.ride_subscription.id</code>.
     */
    public JooqRideSubscriptionRecord setId(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.ride_subscription.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.ride_subscription.origin_city</code>.
     */
    public JooqRideSubscriptionRecord setOriginCity(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.ride_subscription.origin_city</code>.
     */
    public String getOriginCity() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.ride_subscription.destination_city</code>.
     */
    public JooqRideSubscriptionRecord setDestinationCity(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.ride_subscription.destination_city</code>.
     */
    public String getDestinationCity() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.ride_subscription.departs_on_earliest</code>.
     */
    public JooqRideSubscriptionRecord setDepartsOnEarliest(LocalDateTime value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>public.ride_subscription.departs_on_earliest</code>.
     */
    public LocalDateTime getDepartsOnEarliest() {
        return (LocalDateTime) get(3);
    }

    /**
     * Setter for <code>public.ride_subscription.departs_on_latest</code>.
     */
    public JooqRideSubscriptionRecord setDepartsOnLatest(LocalDateTime value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>public.ride_subscription.departs_on_latest</code>.
     */
    public LocalDateTime getDepartsOnLatest() {
        return (LocalDateTime) get(4);
    }

    /**
     * Setter for <code>public.ride_subscription.created_on</code>.
     */
    public JooqRideSubscriptionRecord setCreatedOn(LocalDateTime value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>public.ride_subscription.created_on</code>.
     */
    public LocalDateTime getCreatedOn() {
        return (LocalDateTime) get(5);
    }

    /**
     * Setter for <code>public.ride_subscription.updated_on</code>.
     */
    public JooqRideSubscriptionRecord setUpdatedOn(LocalDateTime value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>public.ride_subscription.updated_on</code>.
     */
    public LocalDateTime getUpdatedOn() {
        return (LocalDateTime) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached JooqRideSubscriptionRecord
     */
    public JooqRideSubscriptionRecord() {
        super(RideSubscription.RIDE_SUBSCRIPTION);
    }

    /**
     * Create a detached, initialised JooqRideSubscriptionRecord
     */
    public JooqRideSubscriptionRecord(Integer id, String originCity, String destinationCity, LocalDateTime departsOnEarliest, LocalDateTime departsOnLatest, LocalDateTime createdOn, LocalDateTime updatedOn) {
        super(RideSubscription.RIDE_SUBSCRIPTION);

        setId(id);
        setOriginCity(originCity);
        setDestinationCity(destinationCity);
        setDepartsOnEarliest(departsOnEarliest);
        setDepartsOnLatest(departsOnLatest);
        setCreatedOn(createdOn);
        setUpdatedOn(updatedOn);
    }

    /**
     * Create a detached, initialised JooqRideSubscriptionRecord
     */
    public JooqRideSubscriptionRecord(JooqRideSubscription value) {
        super(RideSubscription.RIDE_SUBSCRIPTION);

        if (value != null) {
            setId(value.getId());
            setOriginCity(value.getOriginCity());
            setDestinationCity(value.getDestinationCity());
            setDepartsOnEarliest(value.getDepartsOnEarliest());
            setDepartsOnLatest(value.getDepartsOnLatest());
            setCreatedOn(value.getCreatedOn());
            setUpdatedOn(value.getUpdatedOn());
        }
    }
}
