/*
 * This file is generated by jOOQ.
 */
package lt.liutikas.bananacar_notification_svc.generated.jooq.tables.records;


import lt.liutikas.bananacar_notification_svc.generated.jooq.tables.Ride;
import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;

import java.time.LocalDateTime;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class RideRecord extends UpdatableRecordImpl<RideRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.ride.ride_id</code>.
     */
    public void setRideId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.ride.ride_id</code>.
     */
    public Integer getRideId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.ride.origin_city</code>.
     */
    public void setOriginCity(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.ride.origin_city</code>.
     */
    public String getOriginCity() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.ride.destination_city</code>.
     */
    public void setDestinationCity(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.ride.destination_city</code>.
     */
    public String getDestinationCity() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.ride.departs_on_earliest</code>.
     */
    public void setDepartsOnEarliest(LocalDateTime value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.ride.departs_on_earliest</code>.
     */
    public LocalDateTime getDepartsOnEarliest() {
        return (LocalDateTime) get(3);
    }

    /**
     * Setter for <code>public.ride.departs_on_latest</code>.
     */
    public void setDepartsOnLatest(LocalDateTime value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.ride.departs_on_latest</code>.
     */
    public LocalDateTime getDepartsOnLatest() {
        return (LocalDateTime) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached RideRecord
     */
    public RideRecord() {
        super(Ride.RIDE);
    }

    /**
     * Create a detached, initialised RideRecord
     */
    public RideRecord(Integer rideId, String originCity, String destinationCity, LocalDateTime departsOnEarliest, LocalDateTime departsOnLatest) {
        super(Ride.RIDE);

        setRideId(rideId);
        setOriginCity(originCity);
        setDestinationCity(destinationCity);
        setDepartsOnEarliest(departsOnEarliest);
        setDepartsOnLatest(departsOnLatest);
    }
}
